>>> f = __import__('101-lazy_matrix_mul').lazy_matrix_mul
>>> f()
Traceback (most recent call last):
	...
TypeError: lazy_matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'
>>> f([[1,2]])
Traceback (most recent call last):
	...
TypeError: lazy_matrix_mul() missing 1 required positional argument: 'm_b'
>>> f(None, None)
Traceback (most recent call last):
	...
TypeError: m_a must be a list
>>> f([[1,2]], None)
Traceback (most recent call last):
	...
TypeError: m_b must be a list
>>> f([[]], [[1, 2]])
Traceback (most recent call last):
	...
ValueError: m_a can't be empty
>>> f([[1, 2]], [[], []])
Traceback (most recent call last):
	...
ValueError: m_b can't be empty
>>> f([1,2,3], [[1,2]])
Traceback (most recent call last):
	...
TypeError: m_a must be a list of lists
>>> f([[1, 2]], [1, 2, 3])
Traceback (most recent call last):
	...
TypeError: m_b must be a list of lists
>>> f([[1, 2], [3, 4]], [[1, 2], [3, 4]])
[[7, 10], [15, 22]]
>>> f([[1, 2]], [[3,4], [5, 6]])
[[13, 16]]
>>> f([[1, 2], [3, 4, 5]], [[3,4], [5, 6]])
Traceback (most recent call last):
	...
TypeError: each row of m_a must be of the same size
>>> f([[1, 2], [3, 4]], [[3, 4, 0], [5, 6]])
Traceback (most recent call last):
	...
TypeError: each row of m_b must be of the same size
>>> f([[1, "e"], [3, 4]], [[1, 2], [3, 4]])
Traceback (most recent call last):
	...
TypeError: m_a should contain only integers or floats
>>> f([[1, 2], [3, 4]], [[1, "s"], [3, 4]])
Traceback (most recent call last):
	...
TypeError: m_b should contain only integers or floats
>>> f([[1, 2, 3, 5], [3, 4, 7, 5], [3, 4, 5, 5]], [[1, 2], [1, 3], [1, 3]])
Traceback (most recent call last):
	...
ValueError: m_a and m_b can't be multiplied
